# calculator with left-recursive rules

%cpp {
    #include <iostream>

    int main(void)
    {
        std::string expr = "2+2*2";
        PParser::Parser parser(expr);
        auto result = parser.parse();
        if (result.has_value())
            std::cout << result.value() << std::endl;
        return 0;
    }
}

%root Expr
%type "int"

Value =
    | value:[0-9.]+ { $$ = std::stoi(value); }
    | "(" r:Expr ")" { $$ = r; }

Sum =
    | a:Sum "+" b:Product { $$ = a + b; }
    | a:Sum "-" b:Product { $$ = a - b; }
    | a:Product { $$ = a; }

Product =
    | a:Product "*" b:Value { $$ = a * b; }
    | a:Product "/" b:Value { $$ = a / b; }
    | a:Value { $$ = a; }

Expr =
    | value: Sum { $$ = value; }

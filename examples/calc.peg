%type "int"

%hpp {
    #include <iostream>
}

%cpp {
    int main(void)
    {
        std::string expression;
        for (;;)
        {
            std::cout << "enter expression: ";
            std::getline(std::cin, expression);
            PParser::Parser parser(expression);
            parser.setErrorHandler([](std::string message, size_t _) { std::cout << message << std::endl; });
            if (std::optional<PParser::ExprResult> result; result = parser.parse())
                std::cout << "result: " << result.value() << std::endl;
            else
                std::cout << "invalid expression" << std::endl;
        }
        return 0;
    }
}

Expression =
    | n1:Number _ "+" _ n2:Number { $$ = n1 + n2; }
    | n1:Number _ "-" _ n2:Number { $$ = n1 - n2; }
    | n1:Number _ "*" _ n2:Number { $$ = n1 * n2; }
    | n1:Number _ "/" _ n2:Number{
        if (n2 == 0) parseError("Ð¡annot divide by zero");
        $$ = n1 / n2;
    }

Number = n:[0-9]+ { $$ = std::stoi(n); }
_ = [ \t]*
